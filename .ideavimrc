let mapleader = " "

" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5

set ideavimsupport=dialog
" Turns off all bells.
set visualbell
set noerrorbells

set argtextobj
let g:argtextobj_pairs="[:],(:),<:>"

set exchange
set commentary

" Set current mode ideavim is in
set showmode

" Throws an exception on IdeaVim error.
set ideastrictmode

" Enable relative numbers without needing a plugin
set number relativenumber

" Keep the previous mode when renaming items
set idearefactormode=keep

" Do incremental searching.
set incsearch

" Smart case search
set smartcase ignorecase

" Smart joining of lines, examples here: https://github.com/JetBrains/ideavim/blob/master/doc/ideajoin-examples.md
set ideajoin

" Surround plugin for wrapping things into brackets
set surround

" Switch keyboard locale automatically
set keep-english-in-normal-and-restore-in-insert

" Highlight jumpable characters
set quickscope
let g:qs_highlight_on_keys = ['f', 'F', 't', 'T']
let g:qs_accepted_chars = [
 'a', 'b', 'c', 'd', 'e',
 'f', 'g', 'h', 'i', 'j',
 'k', 'l', 'm', 'n', 'o',
 'p', 'q', 'r', 's', 't',
 'u', 'v', 'w', 'x', 'y',
 'z', 'A', 'B', 'C', 'D',
 'E', 'F', 'G', 'H', 'I',
 'J', 'K', 'L', 'M', 'N',
 'O', 'P', 'Q', 'R', 'S',
 'T', 'U', 'V', 'W', 'X',
 'Y', 'Z', '0', '1', '2',
 '3', '4', '5', '6', '7',
 '8', '9',
]
let g:qs_primary_color = '#fa579c'
let g:qs_secondary_color = '#add149'

" Use system clipboard as a default register
set clipboard=unnamedplus

" Make the yanked region apparent!
Plug 'machakann/vim-highlightedyank'
" A negative number would make the highlight persistent.
let g:highlightedyank_highlight_duration='2000'
let g:highlightedyank_highlight_color='rgba(20, 180, 255, 25)'


" Y yanks till end of line, inclusively
nnoremap Y y$

" Don't overwrite yank buffer when pasting over text in visual mode
" vnoremap p "0p

" Mappings to use system clipboard on demand, while still allowing to use registers
" vnoremap <leader>y "+y
" vnoremap <leader>d "+d
" nnoremap <leader>y "+yy
" nnoremap <leader>p "+p
" nnoremap <leader>P "+P
" vnoremap <leader>p "+p
" vnoremap <leader>P "+P

" Change indentation from visual mode without going back to normal every time
vnoremap < <gv
vnoremap > >gv

" yank till start, move to last character of yanked region, and then one more left
nnoremap <leader>y y^`]l
nnoremap <leader>c c^
nnoremap <leader>d d^

" Function body magic
nnoremap yo v%l%y`[
nnoremap do v%l%d
nnoremap co v%l%c

" Hacky way to move stuff to a new line after commas, but will do for now
" Useful for newlining list of arguments
nnoremap <leader>n f,a<CR><Esc>
map <Leader>c <action>(RenameElement)

map <A-h> <action>(PreviousTab)
map <A-l> <action>(NextTab)
map <A-k> <action>(Back)
map <A-j> <action>(Forward)

map <A-d> <action>(CloseEditor)
map <A-u> <action>(ReopenClosedTab)

map <leader>\ <action>(HideAllWindows)

map <leader>i <action>(Generate)
map <leader>w <action>(QuickJavaDoc)
map <leader>/ <action>(ShowErrorDescription)

map <leader>fc <action>(GotoClass)
map <leader>ff <action>(GotoFile)
map <leader>fs <action>(GotoSymbol)
map <leader>fx <action>(GotoAction)
map <leader>fr <action>(RecentFiles)

map <leader>gu <action>(ShowUsages)
map <leader>gi <action>(GotoImplementation)
map <leader>gI <action>(GotoSuperMethod)
map <leader>gg <action>(GotoDeclaration)
map <leader>gh <action>(CallHierarchy)


" All kinds of splits to move between multiple tabs and windows
map <leader>dv <action>(SplitVertically)
map <leader>dh <action>(SplitHorizontally)
map <leader>du <action>(Unsplit)
map <leader>ds <action>(MoveEditorToOppositeTabGroup)
map <leader>dn <action>(EditSourceInNewWindow)
map <C-w> <action>(NextWindow)
sethandler <c-h> a:vim
sethandler <c-l> a:vim
sethandler <c-j> a:vim
sethandler <c-k> a:vim
noremap <c-h> <c-w>h
noremap <c-l> <c-w>l
noremap <c-j> <c-w>j
noremap <c-k> <c-w>k

<out T>, [17-Apr-23 18:05]


map <leader>rd <action>(Debug)
map <leader>rr <action>(Run)
map <leader>rh <action>(Flutter.Toolbar.ReloadAction)
map <leader>rp <action>(Android.SyncProject)
map <leader>rs <action>(Stop)
map <leader>rb <action>(MakeGradleProject)

map <leader>ss <action>(ToggleLineBreakpoint)
map <leader>sf <action>(ReformatCode)
map <leader>sv <action>(Debugger.EvaluateInConsole)

set history=1000

"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
" Find examples here: https://jb.gg/share-ideavimrc
