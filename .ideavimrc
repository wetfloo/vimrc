let mapleader = " "

" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5

set ideavimsupport=dialog
" Turns off all bells.
set visualbell
set noerrorbells

" Set current mode ideavim is in
set showmode

" Throws an exception on IdeaVim error.
set ideastrictmode

" Enable relative numbers without needing a plugin
set number relativenumber

" Keep the previous mode when renaming items
set idearefactormode=keep

" Do incremental searching.
set incsearch

" Smart case search
set smartcase ignorecase

" Smart joining of lines, examples here: https://github.com/JetBrains/ideavim/blob/master/doc/ideajoin-examples.md
set ideajoin

" Surround plugin for wrapping things into brackets
set surround

" Y yanks till end of line, inclusively
nnoremap Y y$

" Don't overwrite yank buffer when pasting over text in visual mode
" vnoremap p "0p

" Use system clipboard as a default register
set clipboard=unnamedplus

" Mappings to use system clipboard on demand, while still allowing to use registers
" vnoremap <leader>y "+y
" vnoremap <leader>d "+d
" nnoremap <leader>y "+yy
" nnoremap <leader>p "+p
" nnoremap <leader>P "+P
" vnoremap <leader>p "+p
" vnoremap <leader>P "+P

" Change indentation from visual mode without going back to normal every time
vnoremap < <gv
vnoremap > >gv

" Hacky way to move stuff to a new line after commas, but will do for now
" Useful for newlining list of arguments
nnoremap <leader>n f,a<CR><Esc>
nmap <Leader>c <action>(RenameElement)

map <A-h> <action>(PreviousTab)
map <A-l> <action>(NextTab)
map <A-k> <action>(Back)
map <A-j> <action>(Forward)

map <A-d> <action>(CloseEditor)
map <A-u> <action>(ReopenClosedTab)

map <leader>\ <action>(HideAllWindows)

nmap <leader>i <action>(Generate)
nmap <leader>w <action>(QuickJavaDoc)
nmap <leader>/ <action>(ShowErrorDescription)

nmap <leader>fc <action>(GotoClass)
nmap <leader>ff <action>(GotoFile)
nmap <leader>fs <action>(GotoSymbol)
nmap <leader>fx <action>(GotoAction)
nmap <leader>fr <action>(RecentFiles)

nmap <leader>gu <action>(ShowUsages)
nmap <leader>gi <action>(GotoImplementation)
nmap <leader>gI <action>(GotoSuperMethod)
nmap <leader>gg <action>(GotoDeclaration)
nmap <leader>gh <action>(CallHierarchy)


" All kinds of splits to move between multiple tabs and windows
nmap <leader>dv <action>(SplitVertically)
nmap <leader>dh <action>(SplitHorizontally)
nmap <leader>du <action>(Unsplit)
nmap <leader>ds <action>(MoveEditorToOppositeTabGroup)
nmap <leader>dn <action>(EditSourceInNewWindow)
map <A-w> <action>(NextWindow)
sethandler <c-h> a:vim
sethandler <c-l> a:vim
sethandler <c-j> a:vim
sethandler <c-k> a:vim
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k

nmap <leader>rd <action>(Debug)
nmap <leader>rr <action>(Run)
nmap <leader>rh <action>(Flutter.Toolbar.ReloadAction)
nmap <leader>rp <action>(Android.SyncProject)
nmap <leader>rs <action>(Stop)
nmap <leader>rb <action>(MakeGradleProject)

nmap <leader>ss <action>(ToggleLineBreakpoint)
nmap <leader>sf <action>(ReformatCode)
nmap <leader>sv <action>(Debugger.EvaluateInConsole)

set history=1000

" Make the yanked region apparent!
Plug 'machakann/vim-highlightedyank'
" A negative number would make the highlight persistent.
let g:highlightedyank_highlight_duration='2000'
let g:highlightedyank_highlight_color='rgba(20, 180, 255, 25)'

"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
" Find examples here: https://jb.gg/share-ideavimrc
